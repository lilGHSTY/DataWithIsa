{
  "hooks": {
    "PostToolUse": [
      {
        "name": "Auto-format Python files",
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"${file_path}\" == *.py ]] && command -v autopep8 >/dev/null 2>&1; then cd src && source venv/bin/activate 2>/dev/null && autopep8 --in-place \"${file_path}\" 2>/dev/null; fi",
            "description": "Automatically formats Python files after editing"
          }
        ]
      },
      {
        "name": "Enhanced research logging",
        "matcher": "WebFetch|WebSearch",
        "hooks": [
          {
            "type": "command",
            "command": "mkdir -p research/logs && echo \"[$(date '+%Y-%m-%d %H:%M:%S')] URL: ${url:-query: ${query}} | Purpose: Research\" >> research/logs/research-log.md",
            "description": "Tracks all web research with timestamps and URLs"
          }
        ]
      },
      {
        "name": "Technology context capture",
        "matcher": "WebFetch",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"${url}\" | grep -qE '(flask|python|sqlite|postgresql|javascript|html|css)' 2>/dev/null; then tech=$(echo \"${url}\" | grep -oE '(flask|python|sqlite|postgresql|javascript|html|css)' | head -1); mkdir -p \"research/${tech}\"; echo \"[$(date '+%Y-%m-%d')] ${url}\" >> \"research/${tech}/docs.md\"; fi",
            "description": "Automatically organizes documentation by technology"
          }
        ]
      },
      {
        "name": "Track file modifications",
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"- [$(date '+%Y-%m-%d %H:%M')] Modified: ${file_path}\" >> docs/PROGRESS.md",
            "description": "Logs all file changes to progress document"
          }
        ]
      },
      {
        "name": "Update documentation index",
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"${file_path}\" == docs/*.md ]] && [[ \"${file_path}\" != docs/README.md ]]; then echo \"- [$(basename \"${file_path}\" .md)]($(basename \"${file_path}\"))\" >> docs/README.md; fi",
            "description": "Auto-updates documentation index when new docs are created"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "name": "Prevent accidental secret commits",
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"${new_string:-${content}}\" | grep -qE '(sk-[a-zA-Z0-9]{48}|ghp_[a-zA-Z0-9]{36}|api[_-]?key[[:space:]]*[=:][[:space:]]*[\"'\"']?[a-zA-Z0-9]{20,}|password[[:space:]]*[=:][[:space:]]*[\"'\"']?[^\"'\"']{8,})' 2>/dev/null; then echo 'WARNING: Potential secret detected. Use environment variables instead.'; exit 1; fi",
            "description": "Blocks writes containing potential secrets"
          }
        ]
      },
      {
        "name": "Protect critical files",
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"${file_path}\" == *\".env\" ]] || [[ \"${file_path}\" == */hooks.json ]]; then echo 'WARNING: Attempting to modify protected file. This action has been blocked.'; exit 1; fi",
            "description": "Prevents modification of .env and hooks.json files"
          }
        ]
      },
      {
        "name": "Check for required setup",
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ \"${file_path}\" == src/*.py ]] && [[ ! -f \".env\" ]] && [[ ! -f \"docs/REQUIREMENTS.md\" ]] || grep -q '\\[Describe what you\\'re building\\]' docs/REQUIREMENTS.md 2>/dev/null; then echo 'INFO: Consider running project setup first to configure requirements and environment.'; fi",
            "description": "Reminds to complete setup before coding"
          }
        ]
      }
    ],
    "Stop": [
      {
        "name": "Session summary",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"\\n=== Session ended at $(date '+%Y-%m-%d %H:%M:%S') ===\\n\" >> docs/PROGRESS.md",
            "description": "Marks the end of each Claude Code session"
          }
        ]
      },
      {
        "name": "Generate research summary",
        "hooks": [
          {
            "type": "command",
            "command": "if [[ -f \"research/logs/research-log.md\" ]]; then echo \"\\n## Research Summary\" >> docs/PROGRESS.md; tail -5 research/logs/research-log.md >> docs/PROGRESS.md; fi",
            "description": "Adds recent research to session summary"
          }
        ]
      }
    ]
  }
}